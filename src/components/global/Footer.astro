---
import { Image } from "astro:assets";
import nibble from "../../assets/img/LogoWhite.webp";
import { Icon } from "astro-icon/components";
import { CalendarCheck } from "lucide-astro"
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
import { getRelativeLocaleUrl } from "astro/virtual-modules/i18n.js";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const servicesSoftware = t("services.software-development");
const servicesTechnology = t("services.technology-consulting");
const servicesMaintenance = t("services.Maintenance-Updates");
const servicesIntegrations = t("services.Integrations");

const servicesIntegrationsShopify = t(
  "services.Integrations-with-shopify-and-salesforce",
);
const servicesLandingPage = t("services.landing-page");
const message = t("footer.message");
const messageSecond = t("footer.messageSecond");
const messageThird = t("footer.messageThird");
const foller = t("footer.foller");
const reserverd = t("footer.reserverd");
const titleButton = t('titleButton');
const services = t('services');
const pathServicesDevSoftware = getRelativeLocaleUrl(lang, "/services/desarrollo-software/");
const pathServicesTechnology = getRelativeLocaleUrl(lang, "/services/consultoria-tecnologia/");
const pathServicesMaintenance = getRelativeLocaleUrl(lang, "/services/mantenimiento-actualizado/");
const pathServicesIntegrations = getRelativeLocaleUrl(lang, "/services/integraciones/");
const pathServicesIntegrationsShopify = getRelativeLocaleUrl(lang, "/services/integraciones-a-shopify-y-salesforce/");
const pathServicesLandingPage = getRelativeLocaleUrl(lang, "/services/landing-page/");

const footerItems = [
  {
    name: services,
    path: "/",
    footerListServices: [
      { name: servicesSoftware, path: pathServicesDevSoftware },
      {
        name: servicesTechnology,
        path: pathServicesTechnology,
      },
      { name: servicesIntegrations, path: pathServicesIntegrations },
      { name: servicesLandingPage, path: pathServicesLandingPage },
      {
        name: servicesMaintenance,
        path: pathServicesMaintenance,
      },
      {
        name: servicesIntegrationsShopify,
        path: pathServicesIntegrationsShopify,
      },
    ],
  },
  //falta por agregar los enlaces
  // {
  //   name: "Recursos",
  //   path: "/Recursos",
  //   footerListRecursos: [{ name: "Blog", path:"" }, { name: "Blog", path:"" }, { name: "Blog", path:"" }],
  // },
];

const urlBoton = {
  title: titleButton,
  link: "https://calendly.com/trycatchfactory-com/30min",
};

const redes = [
  {
    name: "tiktok",
    link: "https://www.tiktok.com/@trycatchfactory",
    icon: "ic:baseline-tiktok",
  },
  {
    name: "linkedin",
    link: "https://www.linkedin.com/company/trycatch-factory/",
    icon: "mdi:linkedin",
  },
  {
    name: "facebook",
    link: "https://www.facebook.com/trycatchfactorysw",
    icon: "mdi:facebook",
  },
  {
    name: "instagram",
    link: "https://www.instagram.com/trycatchfactory/",
    icon: "mdi:instagram",
  },
];
---

<footer class="bg-[#070B18] py-20 px-8">
  <a
    href="https://wa.me/5211234567890?text=Me%20gustaría%20saber%20más"
    id="botonWhast"
    class="fixed bottom-4 right-4 2xl:bottom-[50px] 2xl:right-[100px] xl:bottom-[50px] xl:right-[20px] lg:bottom-[50px] lg:right-[35px] max-sm:bottom-[55px] max-sm:right-[25px] px-6 py-6 rounded-full bg-green-500 text-white flex items-center hover:scale-110 hover:shadow-lg transition-transform transition-duration-500 lg:px-2 lg:py-2 md:px-2 md:py-2 max-sm:px-2 max-sm:py-2"
  >
    <Icon name="logos:whatsapp-icon" class="text-4xl max-sm:text-2xl" />
  </a>
  <div class="flex flex-col lg:flex-row w-full max-w-screen-xl gap-6 mx-auto justify-between">
    <div class="flex flex-col items-center lg:items-start w-full md:mx-auto lg:mx-0 lg:max-w-md">
      <Image
        src={nibble}
        class="w-40 md:w-72"
        alt="TryCatch.tv Nibble"
      />
      <p class="text-white mt-8 text-center lg:text-start text-base">
        {message} <br> <br>
        {messageSecond}
        {messageThird}
      </p>
    </div>
    <section class="flex mt-10 lg:mt-0 flex-col items-center md:items-start md:flex-row justify-between gap-16">
      <div>
        <h3 class="text-white text-center md:text-start font-semibold mb-5 text-lg">{services}</h3>
        <ul class="text-center md:text-start">
          {
            footerItems
              .filter((e) => e.name === services)[0]
              .footerListServices?.map((e) => (
                <a
                  class="text-white my-3 block hover:text-tcf-info"
                  href={e.path}
                >
                  <li>{e.name}</li>
                </a>
              ))
          }
        </ul>
      </div>
      <!-- <div>
        <h3 class="text-white font-semibold mb-5 text-lg text-center md:text-start">Recursos</h3>
        <ul class="text-center md:text-start">
          {
            footerItems
              .filter((e) => e.name === "Recursos")[0]
              .footerListRecursos?.map((e) => (
                <a
                  class="text-white my-3 block hover:text-tcf-info"
                  href={e.path}
                >
                  <li>{e.name}</li>
                </a>
              ))
          }
        </ul>
      </div> -->
      <div
        class="flex flex-row items-center justify-evenly mt-12 max-sm:flex-col max-md:mt-0 max-md:flex-col max-sm:mt-8 max-sm:justify-center max-sm:mr-0 max-sm:gap-8 md:flex-col lg:flex-row"
      >
        <a
          target="_blank"
          class="flex flex-row items-center gap-1 cursor-pointer transition-all duration-500 w-[174px] py-3 px-2 justify-center me-2 mb-2 text-sm text-center font-semibold text-tcf-blue focus:outline-none bg-white rounded-full border border-tcf-gray hover:bg-tcf-gray-l hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-tcf-gray-l shadow-sm max-sm:justify-evenly"
          href={urlBoton.link}
        >
          {urlBoton.title}
          <span>
            <CalendarCheck class="w-4 h-4" />
          </span></a
        >
      </div>
    </section>
  </div>
  <div class="flex flex-col items-center w-full max-w-screen-xl mx-auto justify-center gap-5 mt-16">
    <p class="text-white font-medium">{foller}</p>
    <div class="flex gap-4">
      {
        redes.map((e) => (
          <a class="hover:opacity-70" href={e.link} target="_blank">
            <Icon size={28} name={e.icon} class="text-white text-xl mx-2" />
          </a>
        ))
      }
    </div>
    <p class="text-gray-400 text-sm mt-10 text-center">© 2024 TryCatch 
      Factory. {reserverd}</p>
  </div>
</footer>

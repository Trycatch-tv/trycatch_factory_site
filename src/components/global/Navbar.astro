---
import { Image } from "astro:assets";
import nibble from "./../../assets/img/LogoWhite.webp";
import { ChevronDown } from "lucide-astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const pathInicio = getRelativeLocaleUrl(lang, "/");
const pathServicesDevSoftware = getRelativeLocaleUrl(lang, "/services/desarrollo-software/");
const pathServicesTechnology = getRelativeLocaleUrl(lang, "/services/consultoria-tecnologia/");
const pathServicesMaintenance = getRelativeLocaleUrl(lang, "/services/mantenimiento-actualizado/");
const pathServicesIntegrations = getRelativeLocaleUrl(lang, "/services/integraciones/");
const pathServicesIntegrationsShopify = getRelativeLocaleUrl(lang, "/services/integraciones-a-shopify-y-salesforce/");
const pathServicesLandingPage = getRelativeLocaleUrl(lang, "/services/landing-page/");
const pathPortafolioInventory = getRelativeLocaleUrl(lang, "/portfolio/sistema-inventario/");
const pathPortafolioBilling = getRelativeLocaleUrl(lang, "/portfolio/sistema-facturacion/");
const pathReources = getRelativeLocaleUrl(lang, "/resources/");
const pathTeam = getRelativeLocaleUrl(lang, "/team/");
const pathBlog = getRelativeLocaleUrl(lang, "/blog/");

const t = useTranslations(lang);
const inicio = t("nav.Home");
const servicios = t("nav.Services");
const portfolio = t("nav.Portfolio");
const recursos = t("nav.Resources");
const equipo = t("nav.Team");
const blog = t("nav.Blog");
const contacto = t("nav.Contact");
const servicesSoftware = t("services.software-development");
const servicesTechnology = t("services.technology-consulting");
const servicesMaintenance = t("services.Maintenance-Updates");
const servicesIntegrations = t("services.Integrations");
const servicesIntegrationsShopify = t(
  "services.Integrations-with-shopify-and-salesforce",
);
const servicesLandingPage = t("services.landing-page");
const portfolioInventory = t("portfolio.Inventory-System");
const portfolioBilling = t("portfolio.Billing-System");

const navbarItems = [
  {
    name: inicio,
    path: pathInicio,
    target: "_self",
    subItems: [],
  },
  {
    name: servicios,
    path: "#",
    target: "_self",
    subItems: [
      {
        name: servicesSoftware,
        path: pathServicesDevSoftware,
        target: "_self",
      },
      {
        name: servicesTechnology,
        path: pathServicesTechnology,
        target: "_self",
      },
      {
        name: servicesMaintenance,
        path: pathServicesMaintenance,
        target: "_self",
      },
      {
        name: servicesIntegrations,
        path: pathServicesIntegrations,
        target: "_self",
      },
      {
        name: servicesIntegrationsShopify,
        path: pathServicesIntegrationsShopify,
        target: "_self",
      },
      {
        name: servicesLandingPage,
        path: pathServicesLandingPage,
        target: "_self",
      },
    ],
  },
  {
    name: portfolio,
    path: `#`,
    target: "_self",
    subItems: [
      {
        name: portfolioInventory,
        path: pathPortafolioInventory,
        target: "_self",
      },
      {
        name: portfolioBilling,
        path: pathPortafolioBilling,
        target: "_self",
      },
    ],
  },
  {
    name: recursos,
    path: pathReources,
    target: "_self",
    subItems: [],
  },
  {
    name: equipo,
    path: pathTeam,
    target: "_self",
    subItems: [],
  },
  {
    name: blog,
    path: pathBlog,
    target: "_self",
    subItems: [],
  },
];
const navbarLenguaje = {
  en: {
    name: "Ingles",
    path: "en",
  },
  es: {
    name: "Espa√±ol",
    path: "es",
  },
};
---

<nav
  class="bg-black/70 bg-blur backdrop-blur-md w-full z-50 top-0 left-0 fixed py-2"
>
  <div
    class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4 max-sm:max-w-screen-sm md:flex-nowrap"
  >
    <a href="/" class="flex items-center">
      <Image src={nibble} class="w-36 h-10 mr-3" alt="TryCatch.tv Nibble" />
    </a>
    <button
      data-collapse-toggle="navbar-default"
      type="button"
      class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      aria-controls="navbar-default"
      aria-expanded="false"
      onclick="toggleMenu()"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        class="w-5 h-5"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 17 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 1h15M1 7h15M1 13h15"></path>
      </svg>
    </button>
    <div
      class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1"
      id="navbar-sticky"
    >
      <ul
        class="flex flex-col items-center p-4 md:p-2 mt-4 font-medium border rounded-lg md:flex-row md:space-x-8 md:mt-0 md:border-0"
      >
        {
          navbarItems.map((item) => (
            <li class="navbar-submenu relative">
              <a
                href={item.path}
                target={item.target || "_self"}
                class=" flex items-center gap-2 py-2 pl-3 pr-4 rounded hover:text-tcf-info hover:scale-105 transition duration-100 md:p-0 text-white "
              >
                {item.name}
                {item.subItems.length > 0 && <ChevronDown size={15} />}
              </a>
              {item.subItems.length > 0 && (
                <div
                  class="absolute hidden left-0  min-w-[200px] bg-white p-2 z-20 border rounded-lg"
                  onmouseover="showSubmenu(this)"
                  onmouseout="hideSubmenu(this)"
                >
                  {item.subItems.map((subItem) => (
                    <a
                      href={subItem.path}
                      class="block p-2 hover:bg-tcf-info  text-xs rounded"
                    >
                      {subItem.name}
                    </a>
                  ))}
                </div>
              )}
            </li>
          ))
        }
        <li>
          <a
            href="/contact"
            target="_self"
            onclick="openModal()"
            class="block py-1.5 px-4 hover:bg-tcf-info hover:scale-105 text-tcf-blue rounded-3xl bg-white trasition duration-100"
          >
            {contacto}
          </a>
        </li>
        <li class="navbar-submenu relative">
          <a
            href="#"
            id="lenguaje"
            target="_self"
            class="flex items-center gap-2 py-2 pl-3 pr-4 rounded hover:text-tcf-info hover:scale-105 transition duration-100 md:p-0 text-white"
          >
            <p>{navbarLenguaje[lang].name}</p>
            <ChevronDown size={16} class="text-white" />
          </a>
          <div
            class="absolute hidden left-0 min-w-[200px] bg-white p-2 z-20 border rounded-lg"
            onmouseover="showSubmenu(this)"
            onmouseout="hideSubmenu(this)"
          >
            {
              Object.entries(navbarLenguaje).map(([key, value]) => (
                <a
                  href={
                    lang === value.path
                      ? "#"
                      : getRelativeLocaleUrl(value.path, "#")
                  }
                  target="_self"
                  class="block p-2 hover:bg-tcf-info text-xs rounded"
                >
                  {value.name}
                </a>
              ))
            }
          </div>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script is:inline>
  function toggleMenu() {
    if (!document.getElementById("navbar-sticky")) return;

    const menu = document.getElementById("navbar-sticky");
    menu?.classList.toggle("hidden");
  }
  function showSubmenu(submenu) {
    submenu.classList.remove("hidden");
  }

  function hideSubmenu(submenu) {
    submenu.classList.add("hidden");
  }
  function openModal() {
    document.getElementById("myModal")?.classList.remove("hidden");
    document.getElementById("myModal")?.classList.add("flex");
  }
  window.onclick = function (event) {
    const modal = document.getElementById("myModal");
    if (event.target === modal) {
      modal.classList.add("hidden");
    }
  };
</script>

<style>
  .navbar-submenu:hover .absolute,
  .absolute:hover {
    display: block;
  }
</style>

---
import { Image } from "astro:assets";
import process from "../../assets/img/process.svg";
import metodology from "../../assets/img/methodology.svg";
import { CircleDot } from "lucide-astro";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const items:any = t("items.OurProcessing");
const itemsTwo:any = t("items.OurPorcessingTwo");
const title = t("title.Proccess");
const methodology = t("title.Methodology");
const data = [
  {
    title: title,
    img: "/public/assets/svg/process.svg",
    items,
  },
  {
    title: methodology,
    items: itemsTwo,
  },
];
---


<div class="flex relative flex-col justify-center bg-procesos bg-no-repeat bg-cover bg-center py-16">
  <div
    class="w-full h-full top-0 absolute inset-0 backdrop-blur-sm"
  >
  </div>
  <div
    class="flex relative flex-col justify-center px-4 py-8 sm:py-16"
  >
    <div class="flex justify-center flex-grow max-w-screen-xl mx-auto">
      <div class="mt-2 w-12/12 h-auto max-sm:max-w-screen-sm">
        <div
          class="flex flex-col gap-10 flex-grow max-sm:flex-col max-sm:max-w-screen-sm"
        >
          <!---Espacio para imagen o video -->
          <article
            class="flex flex-col-reverse lg:flex-row items-center bg-black/70 p-8"
          >
            <div class="w-full flex justify-center items-center">
              <Image
                src={process}
                class="size-96 rounded-md max-sm:p-5 max-sm:rounded-[2rem]"
                alt="TryCatch.tv process"
                id="left"
              />
            </div>

            <div class="flex flex-col gap-10 w-full md:1/2">
              <h2
                class="font-bold text-3xl md:text-4xl fon-inter mt-8 text-white max-sm:text-center md:text-center max-md:text-center"
              >
                {data[0].title}
              </h2>
              <div class="flex flex-col gap-10">
                {
                  data[0].items.map((item:any, index:any) => (
            
                    <article class="flex gap-2">
                      <div>
                        <p class="text-5xl font-bold text-white">
                          {index + 1}.
                        </p>
                      </div>
                      <div>
                        <p
                          class="text-white text-sm md:text-lg"
                          transition:name=""
                        >
                          {item}
                        </p>
                      </div>
                    </article>
                  ))
                }
              </div>
            </div>
          </article>
          <article
            class="flex flex-col lg:flex-row items-center bg-black/70 p-8"
          >
            <div
              class="flex flex-col gap-10 ml-10 w-1/2 mb-8 max-sm:w-full max-sm:ml-0 md:w-full max-md:w-full md:ml-0 xl:ml-0 max-md:ml-0"
            >
              <h2
                class="font-bold text-3xl md:text-4xl fon-inter mt-8 ml-2 text-white max-sm:text-center md:text-center max-md:text-center"
              >
                {data[1].title}
              </h2>
              <div class="flex flex-col gap-10">
                {
                  data[1].items?.map((item:any, index:any) => (
                    <article class="flex gap-2">
                      <div>
                        <p class=" text-white">
                          <CircleDot size="25" />
                        </p>
                      </div>
                      <div>
                        <p
                          class="text-white text-sm md:text-lg"
                          transition:name=""
                        >
                          {item}
                        </p>
                      </div>
                    </article>
                  ))
                }
              </div>
            </div>
            <!---Espacio para imagen o video -->
            <div
              class="w-5/12 flex justify-center items-center max-sm:w-full md:w-full max-md:w-full"
            >
              <Image
                src={metodology}
                class="size-96 rounded-md mr-3 max-sm:rounded-[2rem] max-sm:p-5"
                alt="TryCatch.tv process"
                id="right"
              />
            </div>
          </article>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  import { gsap } from "gsap";

  import { ScrollTrigger } from "gsap/ScrollTrigger";

  import { ScrollToPlugin } from "gsap/ScrollToPlugin";

  gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);
  const animateElement = (selector:any, direction:any) => {
  const isHorizontal = window.innerWidth > 768;
  gsap.fromTo(
    selector,
    {
      [isHorizontal ? 'x' : 'y']: direction * 100,
      opacity: 0,
    },
    {
      [isHorizontal ? 'x' : 'y']: 0,
      opacity: 1,
      duration: 1.5,
      ease: "power2.out",
      scrollTrigger: {
        trigger: selector,
        start: "top 80%",
        end: "top 20%",
        scrub: true,
      },
    }
  );
};

if (window.innerWidth > 768) {
  animateElement("#left", -1);
  animateElement("#right", 1);
} else {
  animateElement("#left", -1);
  animateElement("#right", -1);
}
</script>
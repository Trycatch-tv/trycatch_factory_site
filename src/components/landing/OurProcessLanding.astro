---
import { Image } from "astro:assets";
import process from "../../assets/img/Rectangle.svg";
import metodology from "../../assets/img/Ellipse.png";

const data = [
  {
    title: "Proceso",
    img: "/public/assets/svg/process.svg",
    items: [
      "Análisis y Planificación: Evaluamos tus necesidades y desarrollamos un plan detallado para tu proyecto, asegurando que todas las etapas estén alineadas con tus objetivos estratégicos.",
      "Desarrollo y Pruebas: Creamos y probamos tu software, asegurando la calidad y funcionalidad en cada etapaDesarrollo y Pruebas:Creamos y probamos tu software con un enfoque riguroso en calidad y funcionalidad, utilizando metodologías ágiles para garantizar eficiencia y flexibilidad..",
      "Implementación y Soporte: Desplegamos tu solución y brindamos soporte continuo para garantizar su éxito.mplementación y Soporte:Desplegamos tu solución de manera efectiva y brindamos soporte continuo para asegurar su éxito y funcionamiento óptimo.",
      "Comunicación Constante: Mantenemos una comunicación constante y colaborativa, informándote sobre el estado del proyecto para ofrecer una experiencia única y alineada con tus necesidades.",
    ],
  },
  {
    title: "Proyectos-descripción",
    items: [
      "Cuéntanos más sobre él y cómo podemos ayudarte. Completa el formulario a continuación y uno de nuestros expertos se pondrá en contacto contigo a la brevedad."
    ]
  },
  {
    title: "Proyectos-titulo",
    items: [
      "¿Tienes un proyecto en mente?",
    ],
  }
];

---
<div>
  <h2 class=" mb-10 text-center font-bold text-3xl text-tcf-blue">Proceso</h2>
  <div class="grid grid-cols-2"> 
    <div class="relative">
      <Image
        src={process}
        class="size-9/12 rounded-md absolute z-30 top-24 left-16"
        alt="TryCatch.tv process"
        ="left"
      />

      <Image
        src={metodology}
        class="size-full"
        alt="TryCatch.tv process"
        id="right"
      />
    </div>
    <div class="grid grid-rows-4 gap-8 w-11/12">
        {
          data[0].items.map((item, index) => (
            <article class="flex gap-4 text-tcf-blue">
              <div>
                <p class="text-3xl font-bold ml-10">
                  {index + 1}
                </p>
              </div>
              <div>
                <p class="text-md font-medium">
                  {item}
                </p>
              </div>
            </article>
          ))
        }
    </div>
  </div>
</div>

<div class="bg-gray-100 min-w-screen h-auto mt-14">
  <div class="">
    {
      data[2].items.map((item) => (
        <article class="text-tcf-blue">
          <div>
            <h1 class="text-center font-bold text-2xl pt-10">
              {item}
            </h1>
          </div>
          <div class="w-6/12 mx-auto pt-5">
            {
              data[1].items.map((item) => (
                <p class="text-md font-medium">
                  {item}
                </p>
              ))
            }
          </div>
        </article>
      ))
    }
  </div>
  <div class="w-5/12 mx-auto grid grid-cols-2 pt-10 pb-10">
    <a 
      href={``}
      rel="noopener noreferrer"
      target="_blank" 
      class="mx-auto w-56 h-14 rounded-3xl font-semibold bg-gradient-to-r from-cyan-500 to-blue-500 text-white text-center py-4">
      <span>Contactanos</span>
    </a>
    <a
      href={`https://wa.me/5211234567890?text=Me%20gustaría%20saber%20más`}
      rel="noopener noreferrer"
      target="_blank" 
      class="mx-auto w-56 h-14 rounded-3xl text-blue font-semibold bg-gradient-to-r from-cyan-500 to-blue-500 text-white text-center py-4">
      Whatssap
    </a>
  </div>
</div>

<script>
  import { gsap } from "gsap";

  import { ScrollTrigger } from "gsap/ScrollTrigger";

  import { ScrollToPlugin } from "gsap/ScrollToPlugin";

  gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);
  const animateElement = (selector:any, direction:any) => {
  const isHorizontal = window.innerWidth > 768;
  gsap.fromTo(
    selector,
    {
      [isHorizontal ? 'x' : 'y']: direction * 100,
      opacity: 0,
    },
    {
      [isHorizontal ? 'x' : 'y']: 0,
      opacity: 1,
      duration: 1.5,
      ease: "power2.out",
      scrollTrigger: {
        trigger: selector,
        start: "top 80%",
        end: "top 20%",
        scrub: true,
      },
    }
  );
};

if (window.innerWidth > 768) {
  animateElement("#left", -1);
  animateElement("#right", 1);
} else {
  animateElement("#left", -1);
  animateElement("#right", -1);
}
</script>
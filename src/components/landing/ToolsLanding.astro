---
import { Filter } from "lucide-astro";
import { ViewTransitions } from "astro:transitions";
---

<section
  class="container p-8 mx-auto xl:px-5 max-w-sreen-lg py-5 lg:py-8 relative"
>
  <!-- <div class="w-full flex mb-20 max-w-[400px]">
    <select id="itemSelect" class="w-full p-2 border border-gray-300 rounded">
      <option value="all">Todos</option>
      <option value="blog">Blogs</option>
      <option value="video">Videos</option>
      <option value="articulo">Articulos</option>
    </select>
  </div> -->
  <div class="size-full md:size-auto">
    <!-- Select en la parte izquierda -->
    <!-- Tarjetas en la parte derecha -->
    <div
      id="cardContainer"
      class="grid grid-cols-1 gap-5 md:grid-cols-2 lg:grid-cols-3"
    >
      <!-- Las tarjetas se insertar치n aqu칤 din치micamente -->
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  // Registra el plugin ScrollTrigger
  gsap.registerPlugin(ScrollTrigger);

  const itemSelect: any = document.getElementById("itemSelect");
  const cardContainer: any = document.getElementById("cardContainer");

  const cardsData = [
    {
      id: 1,
      type: "video",
      title: "Video 1",
      description: "Descripci칩n de la tarjeta 1.1",
      link: "https://example.com/video1",
      image: "",
    },
    {
      id: 2,
      type: "video",
      title: "Video 2",
      description: "Descripci칩n de la tarjeta 1.2",
      link: "https://example.com/video2",
      image: "",
    },
    {
      id: 3,
      type: "Blog",
      title:
        "Me aprobaron mi charla de softskills para el AWS Community Day en Guatemala 游땕",
      description: "Blog de softskills",
      link: "/blog/me-aprobaron-mi-charla-de-softskills-para-el-aws-community-day-en-guatemala",
      image: "/public/img/Conferencia.jpg",
    },
    {
      id: 4,
      type: "Blog",
      title: "Aprenda dise침os de sistemas, caso de estudio de Netflix",
      description: "Dise침o de sistemas",
      link: "/blog/aprenda-dise-o-de-sistemas-caso-de-estudio-netflix",
      image: "/public/img/diseno_software.jpg",
    },
    {
      id: 5,
      type: "blog",
      title: "71 proyectos para practicar Python",
      description: "Blog Python",
      autor: "Judlup",
      link: "/blog/proyectos-python",
      image: "/public/img/python.jpg",
    },
    {
      id: 6,
      type: "blog",
      title:
        "Aprenda a implementar un control de acceso basado en roles en NodeJS",
      description: "Blog de NodeJS",
      link: "/blog/aprenda-a-implementar-un-control-de-acceso-basado-en-roles-en-nodejs",
      image: "/public/img/imgBlog2.jpg",
    },
    {
      id: 7,
      type: "blog",
      title:
        "Playlist para aprender redes neuronales con Python desde cero y en espa침ol",
      description: "Blog de Python",
      link: "/blog/playlist-para-aprender-redes-neuronales-con-python-desde-cero-y-en-espa-ol",
      image: "/public/img/redes_neuronales.jpg",
    },
  ];

  function renderCards(cards: any) {
    cardContainer.innerHTML = "";
    cards.forEach((card: any) => {
      const cardElement = document.createElement("div");
      cardElement.id = "rouserces";
      cardElement.className =
        "size-auto shadow-lg rounded-2xl max-w-sm rounded-xl overflow-hidden"; // Agregamos flexbox para alinear la imagen y el contenido
      cardElement.innerHTML = `
      <img src="${card.image}" class="size-full" alt="Imagen recurso">
      <a href="${card.link}" target="_blank" class="absolute inset-0 bg-black/20 opacity-0 inline-block hover:opacity-100 transition-all scale-95 duration-300 text-white">
        <div class="p-3">
          <p class="text-700">${card.description}</p>
          <h3 class="text-md font-bold mb-2">${card.title}</h3>
        </div>
      </a>
    `;
      cardContainer.appendChild(cardElement);
      gsap.fromTo(
        "#rouserces",
        {
          opacity: 0,
          y: 50,
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          ease: "power2.out",
          stagger: 0.3, // A침ade un retardo entre cada tarjeta
        }
      );
    });
  }

  // Render initial cards
  renderCards(cardsData);

  // Add event listener to update cards based on select change
  itemSelect.addEventListener("change", (event: any) => {
    const selectedValue = event.target.value;
    if (selectedValue === "all") {
      renderCards(cardsData);
    } else {
      const filteredCards = cardsData.filter(
        (card) => card.type === selectedValue
      );
      renderCards(filteredCards);
    }
  });
</script>
<script></script>

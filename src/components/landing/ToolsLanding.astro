---
import { Filter } from "lucide-astro";
---

<section
  class="grid grid-cols-3 gap-4 mx-auto my-28 max-w-screen-xl p-4 max-sm:grid-cols-1 font-sans"
  id="cardContainer"
>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  // Registra el plugin ScrollTrigger
  gsap.registerPlugin(ScrollTrigger);

  const itemSelect: any = document.getElementById("itemSelect");
  const cardContainer: any = document.getElementById("cardContainer");

  const cardsData = [
    {
      id: 1,
      type: "video",
      title: "Video 1",
      description: "Descripción de la tarjeta 1.1",
      link: "https://example.com/video1",
      image: "",
    },
    {
      id: 2,
      type: "video",
      title: "Video 2",
      description: "Descripción de la tarjeta 1.2",
      link: "https://example.com/video2",
      image: "",
    },
  ];

  function renderCards(cards: any) {
    cardContainer.innerHTML = "";
    cards.forEach((card: any) => {
      const cardElement = document.createElement("div");
      cardElement.id = "rouserces";
      cardElement.className =
        "max-w-sm  flex flex-col bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700"; // Agregamos flexbox para alinear la imagen y el contenido
      cardElement.innerHTML = `
      <img src="${card.image}" class="rounded-t-lg w-full h-48 object-cover object-center" alt="Imagen recurso"> <!-- Agregamos la imagen -->
      <div class="p-5">
        <h3 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white font-sans2">${card.title}</h3>
       
        <p>${card.description}</p>
        <a href="${card.link}" target="_blank" class="mt-2 inline-flex items-center px-4 py-2 text-sm font-medium text-center text-white bg-blue-950 rounded-3xl hover:bg-tcf-gray-l hover:text-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800 font-sans transition ease-in-out delay-150  hover:-translate-y-1 hover:scale-110 duration-300">Ver Recurso</a>
           
        </div>
    `;
      cardContainer.appendChild(cardElement);
      gsap.fromTo(
        "#rouserces",
        {
          opacity: 0,
          y: 50,
        },
        {
          opacity: 1,
          y: 0,
          duration: 1,
          ease: "power2.out",
          stagger: 0.3, // Añade un retardo entre cada tarjeta
        },
      );
    });
  }

  // Render initial cards
  renderCards(cardsData);

  // Add event listener to update cards based on select change
  itemSelect.addEventListener("change", (event: any) => {
    const selectedValue = event.target.value;
    if (selectedValue === "all") {
      renderCards(cardsData);
    } else {
      const filteredCards = cardsData.filter(
        (card) => card.type === selectedValue,
      );
      renderCards(filteredCards);
    }
  });
</script>

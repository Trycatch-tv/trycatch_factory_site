---
import { getLangFromUrl, useTranslations } from "../../i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const title = t("title.ServicesLanding");
---

<section class="flex flex-col justify-center min-h-screen" id="services">
  <section class="flex flex-col justify-center mt-5 pt-5 sm:min-h-screen">
    <div class="Services flex flex-col items-center">
      <h2 class="text-2xl md:text-4xl font-bold text-tcf-blue">
        {title}
      </h2>
      <div
        class="container py-3 px-0 lg:max-w-screen-lg max-w-screen-sm mx-auto flex items-center"
      >
        <div id="prevSVG" class="w-7 h-7 mr-2 cursor-pointer">
          <svg
            width="20px"
            height="20px"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16.1795 3.26875C15.7889 2.87823 15.1558 2.87823 14.7652 3.26875L8.12078 9.91322C6.94952 11.0845 6.94916 12.9833 8.11996 14.155L14.6903 20.7304C15.0808 21.121 15.714 21.121 16.1045 20.7304C16.495 20.3399 16.495 19.7067 16.1045 19.3162L9.53246 12.7442C9.14194 12.3536 9.14194 11.7205 9.53246 11.33L16.1795 4.68297C16.57 4.29244 16.57 3.65928 16.1795 3.26875Z"
              fill="#0F0F0F"></path>
          </svg>
        </div>
        <div class="overflow-hidden flex-1">
          <div
            class="services-container flex transition-transform duration-300"
          >
            <!-- La lista de servicios se renderizará aquí -->
          </div>
        </div>
        <div id="nextSVG" class="w-7 h-7 ml-2 cursor-pointer">
          <svg
            fill="#000000"
            height="20px"
            width="20px"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            viewBox="0 0 24 24"
            xml:space="preserve"
          >
            <g id="next">
              <g>
                <polygon
                  points="6.8,23.7 5.4,22.3 15.7,12 5.4,1.7 6.8,0.3 18.5,12"
                ></polygon>
              </g>
            </g>
          </svg>
        </div>
      </div>
      <div class="pagination-container flex justify-center mt-0 p-0">
        <span
          class="pagination-dot ml-10 mr-10 h-4 cursor-pointer"
          id="spanPag"
          onclick="handlePaginationClick(1)"></span>
      </div>
    </div>
  </section>
</section>

<script>
  import { gsap } from "gsap";
  import data from "../../content/services/service.json";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { ScrollToPlugin } from "gsap/ScrollToPlugin";

  gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);
  const card = document.querySelector("#services");
  const servicesItems = Object.values(data.services).flatMap((service) =>
    Object.values(service),
  );
  const buttonPrev: any = document.getElementById("prevSVG");
  const buttonNext: any = document.getElementById("nextSVG");
  const spanPag: any = document.getElementById("spanPag");
  let actualPage = 1;
  let showQuantity = 1;
  function getLanguageFromUrl() {
    const path = window.location.pathname;
    const segments = path.split("/").filter(Boolean);
    // Suponiendo que el idioma es el primer segmento
    return segments[0] || "es"; // 'es' es el idioma por defecto
  }
  const lang = getLanguageFromUrl();
  function handleNextPage() {
    if (window.innerWidth > 1024) {
      showQuantity = 3;
    } else if (window.innerWidth > 640) {
      showQuantity = 1;
    } else {
      showQuantity = 1;
    }
    const numberPages = Math.ceil(servicesItems.length / showQuantity);
    if (actualPage < numberPages) {
      actualPage++;
      renderServices();
    }
  }
  function handlePrevPage() {
    if (actualPage > 1) {
      actualPage--;
      renderServices();
    }
  }
  function renderServices() {
    if (window.innerWidth >= 1024) {
      showQuantity = 3;
    } else if (window.innerWidth > 640) {
      showQuantity = 1;
    } else {
      showQuantity = 1;
    }
    const valueTwoSlice = actualPage * showQuantity;
    const valueOneSlice = (actualPage - 1) * showQuantity;
    const finalServicesArray = servicesItems.slice(
      valueOneSlice,
      valueTwoSlice,
    );
    const servicesContainer: any = document.querySelector(
      ".services-container",
    );
    servicesContainer.innerHTML = "";
    finalServicesArray.forEach((service: any) => {
      const { title, imageService, path, description, en } = service;
      const serviceElement = document.createElement("div");
      serviceElement.classList.add(
        "flex",
        "flex-col",
        "flex-1",
        "shadow",
        "border",
        "h-auto",
        "bg-[#f9fafb]",
        "rounded-lg",
        "p-4",
        "m-10",
        "max-sm:m-0",
        "w-[400px]",
      );
      serviceElement.id = "service";
      serviceElement.innerHTML = `
                <div class="flex  justify-center items-center max-sm:h-auto">
                    <img src="${imageService}" alt="Imagen del servicio" class="block w-30 h-20 object-cover mb-2">
                </div>
                <h3 class="text-xl sm:text-2xl text-[#172554] font-semibold mt-2 mb-6 text-center font-bold">${lang == en.lenguage ? en.title : title}</h3>
                <p class="flex-grow text-center text-tcf-blue text-sm">${lang == en.lenguage ? en.description : description}</p>
                <div class="flex justify-center">
                    <a class="border text-white w-full rounded-2xl px-6 py-2 mt-6 c-white bg-[#172554] hover:bg-gray-500 text-center" href=${lang == en.lenguage ? "/en/"+path :path}>${lang == en.lenguage ? "more..." : "Ver más"}</a>
                </div>
            `;
      servicesContainer.appendChild(serviceElement);
    });
  }
  function handlePaginationClick(pageNumber: any) {
    actualPage = pageNumber;
    renderServices();
  }
  buttonPrev.addEventListener("click", handlePrevPage);
  buttonNext.addEventListener("click", handleNextPage);
  spanPag.addEventListener("click", () => {
    handlePaginationClick(3);
  });
  window.addEventListener("resize", handleResize);
  function handleResize() {
    renderServices();
  }
  window.onload = function () {
    handleResize();
  };
  gsap.from(card, {
    duration: 1,
    opacity: 0,
    y: 50,
    stagger: 0.2,
    ease: "power2.out",
    scrollTrigger: {
      trigger: "#services",
      start: "top 80%",
      end: "top 20%",
      scrub: true,
    },
  });
</script>

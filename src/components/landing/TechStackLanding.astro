---
import Image from "astro/components/Image.astro";
import angular from "../../assets/img/angular.svg";
import react from "../../assets/img/react.svg";
import next from "../../assets/img/nextjs.svg";
import spring from "../../assets/img/spring.svg";
import nestjs from "../../assets/img/nestjs.svg";
import django from "../../assets/img/django.svg";
import aws from "../../assets/img/aws.svg";
import lambda from "../../assets/img/lambda.png";
import postgresql from "../../assets/img/postgresql.svg";
import flutter from "../../assets/img/flutter.svg";
import mysql from "../../assets/img/mysql.svg";
import salesForce from "../../assets/img/salesforce.svg";
import shopify from "../../assets/img/shopify.svg";
import mongodb from "../../assets/img/mongodb.png";
import astro from "../../assets/img/astro.svg";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const descripFronend = t("technology.frontendDescription");
const descripBackend = t("technology.backendDescription");
const descripCloud = t("technology.cloudDescription");
const descripMobile = t("technology.mobileDescription");
const descripIntegrations = t("technology.integreDescription");
const descripTitleIntegration = t("technology.titleIntegration");
const descripTitle = t("technology.title");
const technologyData = [
  {
    title: "Frontend",
    tecnologies: [
      {
        name: "Angular",
        url: angular,
      },
      {
        name: "React",
        url: react,
      },
      {
        name: "Next.js",
        url: next,
      },
      {
        name: "Astro",
        url: astro,
      },
    ],
    quantity: 20,
    description:descripFronend,
  },

  {
    title: "Backend",
    tecnologies: [
      {
        name: "Spring Boot",
        url: spring,
      },
      {
        name: "NestJS",
        url: nestjs,
      },
      {
        name: "Django",
        url: django,
      },
      {
        name: "PostgreSQL",
        url: postgresql,
      },
      {
        name: "MongoDB",
        url: mongodb,
      },
      {
        name: "MySQL",
        url: mysql,
      },
    ],
    quantity: 15,
    description: descripBackend,
  },
  {
    title: "Cloud",
    tecnologies: [
      {
        name: "Aws",
        url: aws,
      },

      {
        name: "Serverless",
        url: lambda,
      },
    ],
    quantity: 5,
    description: descripCloud,
  },
  {
    title: "Mobile",
    quantity: 5,
    description: descripMobile,
    tecnologies: [
      {
        name: "Flutter",
        url: flutter,
      },
      {
        name:"React Native",
        url:react
      }
    ],
  },
  {
    title: descripTitleIntegration,
    quantity: 5,
    description: descripIntegrations,

    tecnologies: [
      {
        name: "SalesForce",
        url: salesForce,
      },
      {
        name: "Shopify",
        url: shopify,
      },
    ],
  },
];
---

<script>
  import { gsap } from "gsap";

  import { ScrollTrigger } from "gsap/ScrollTrigger";

  import { ScrollToPlugin } from "gsap/ScrollToPlugin";

  gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);

  gsap.from("#card", {
    duration: 1,
    opacity: 0,
    y: 50,
    stagger: 0.2,
    ease: "power2.out",
    scrollTrigger: {
      trigger: "#card",
      start: "top 80%", // Inicia la animación cuando la parte superior del grid está en el 80% de la altura del viewport
      end: "top 20%", // Termina la animación cuando la parte superior del grid está en el 20% de la altura del viewport
      scrub: true, // Sincroniza la animación con el desplazamiento del scroll
    },
  });
</script>
<section
  class="max-w-screen-2xl p-6 mx-auto sm:py-12 lg:py-24 min-h-screen flex flex-col justify-center"
>
  <h2
    class="text-[#172554] text-3xl font-bold leading-none sm:text-4xl text-center"
  >
    {descripTitle}
  </h2>
  <div class="flex gap-10 gap-x-20 flex-wrap justify-center mx-auto mt-12">
    {
      technologyData.map((item) => (
        <div
          class="max-w-md min-w-[300px] sm:min-w-[600px] sm:w-auto max-sm:w-auto md:border-[#172554] shadow-sm rounded-xl py-6 px-2.5 md:px-8 md:border"
          id="card"
        >
          <h3 class="text-[#172554] text-xl font-bold leading-none sm:text-2xl text-center">
            {item.title}
          </h3>
          <div class="flex flex-col gap-2 md:flex-row justify-center items-center my-5">
            <strong class="text-[#172554] text-lg sm:text-xl font-bold">
              +{item.quantity}
            </strong>
            <p class="text-center font-medium text-[#172554]">
              {item.description}
            </p>
          </div>
          <div class="min-h-auto flex flex-wrap justify-center gap-10">
            {item.tecnologies.map((tech) => (
              <div class="size-auto flex  justify-center items-center">
                <figure class="flex flex-col justify-center items-center">
                  <Image
                    class="my-5 w-8 h-8 md:h-16 md:w-16"
                    src={tech.url}
                    alt={tech.name}
                    title={tech.name}
                  />
                  <div>
                    <p class="text-[#172554] font-medium  text-xs sm:text-base text-center">
                      {tech.name}
                    </p>
                  </div>
                </figure>
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</section>
